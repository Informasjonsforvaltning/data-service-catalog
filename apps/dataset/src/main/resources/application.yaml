logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:INFO}
  level.org.springframework: WARN
  level.org.springframework.web: WARN
server:
  port: 8080
management:
  endpoints:
    web:
      base-path: /
      path-mapping:
        info: ping
        health: ready
      exposure:
        include: health, info, prometheus
  metrics:
    tags:
      application: dataset-catalog
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_HOST}/auth/realms/fdk
          jwk-set-uri: ${SSO_HOST}/auth/realms/fdk/protocol/openid-connect/certs
          audiences: dataset-catalog
          authorities-claim-name: authorities
          authority-prefix: ""
          authorities-claim-delimiter: ","
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  mvc:
    problemdetails:
      enabled: true
application:
  cors:
    originPatterns: "${CORS_ORIGIN_PATTERNS}"

---
spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk
          jwk-set-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk/protocol/openid-connect/certs
application:
  cors:
    originPatterns: "*"
logging.level.no: DEBUG

---
spring:
  config:
    activate:
      on-profile: test
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:5050/auth/realms/fdk
          jwk-set-uri: http://localhost:5050/auth/realms/fdk/protocol/openid-connect/certs
application:
  cors:
    originPatterns: "*"